Spectrum Display – SPC.dll

This readme is out of date

Installation Instructions

Dependencies are BASSWASAPI.dll and BASS.dll included in the zip file. Thanks to the team at un4seen for these.

The plugin was designed for Windows 7 but will also work on Windows XP if the audio device driver supports a Mixer. I’ve not investigated Windows Vista yet but in theory it should work in one of these two ways.

Installation of SPC involves copying the SPC.dll and SPC.cfg files to your LCDSmartie plugins folder then editing the LCDSmartie config.ini (or more easily running the setup) and adding lines such as (for a 2 line x16  display): 

$dll(spc,1,2#2,16) 
$dll(spc,1,1#2,16)

If you have multiple enabled output sound devices the program may not find the correct one and will just display a line of dashes. This can be resolved in one of two ways:

Disable any unused output devices from control Pane/Sound/Playback
Switch debug on (see below), run LCDSmartie with a call to SPC included, examine the log file and select the preferred loopback device (or mixer device for Windows XP) entry. Then edit the SPC.cfg file and set AudioDevice to this entry number and debug=0. For Windows XP set the AudioDevice to 0 and the AudioInput to the mixer device number.

When the SPC.dll plugin runs it may ceate a log file in the plugins folder:

“SPC.log” – a log file if the debug flag is switched on (see below).

There is a configuration file in the Smartie plugins folder called SPC.cfg and it contains:

//
// Set debug to 1 to get trace information
//
Debug=0
//
// If the automatic loopback device detection doesn't work it can be overriden here
//
//AudioDevice=9
//AudioInput=3
//
// Scaling to apply to the spectrum height if desired.
//
Scaling=1.5
//
//
// Which character to use for a full black character
// 0 means use the 1 remaining custom character
// 255 is the default if nothing is specified
//
//BlackChar=0
BlackChar=255
//

Usage Instructions

Available Functions:


Function
What it does
Example
1
Returns the given line of spectrum display

p1=l#n#s where l=line number (1 at bottom, max 4)
n=Total number of lines (max 4)
s=Smoothness level (1-10) [Optional]
p2=width (maximum 32) this will be rounded down to the nearest of 4,8,16,32
  
$dll(SPC,1,1#1,16)

$dll(SPC,1,1#1,4,8)
2
Returns MIN/MAX/COUNT/FMIN/FMAX/FCOUNT               
main use is for debugging but max can be used to show a VU meter type display.the F is the FFT values.
Param1 should be in upper case.
Value returned for MAX is 0-100 for wasapi devices and an integer value for non-wasapi
$dll(SPC,2,MAX,)
3
Returns the version number of the code
$dll(SPC,3,,)
4
Returns the volume of the requested channel (0-32767) L/R/B – Left/Right/Both.
Either as a linear value (0) or as an approximate db value (1).
Can also specify a smoothness value (0-256) to slow down the rate of change.
$dll(SPC,4,L,0#10)
5
Returns the volume of the requested channel (0-100) L/R/B – Left/Right/Both.
Either as a linear value or as an approximate db value.
Can also specify a smoothness value (0-256) to slow down the rate of change.
This is useful for using Tinybar
$dll(SPC,5,L,0#10)

References:

http://www.un4seen.com/

To Do:
Add a volume display function – done – 15/11/2012
Add stereo VU meter – done 15/11/2012
Other visualizations
Known Limitations:

The program uses 7 of the 8 available custom characters – no way round this but the user needs to be careful not to mix custom character on the same display. Custom character 8 is not used.
The program cannot detect the correct loopback device if multiple loopback devices are enabled. Workarounds for this are given above.
The cpu usage could be improved possibly by:
Might be able to remove the locking
Reducing the number of FFT values returned (currently 1024, could be 256)
On Windows XP it’s hit and miss and is dependent upon the sound device driver supporting a Stereo Mix or Wave Output Mix device. The only alternative is to use the line in or mic in and run a cable from the output to one of these.
All custom characters except the last one are used by Function 1 which means you probably cannot have function 1 and bars/other custom characters on the same display. If BlackChar is set to 0 then this custom character is used as well.
 